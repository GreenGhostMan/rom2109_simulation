<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-1-g15f4949  Build Version: 1.6.7594.29634
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="rom2109_description">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0020117 0.0006427 0.0063855"
        rpy="0 0 0" />
      <mass
        value="2.3522" />
      <inertia
        ixx="0.010811"
        ixy="5.5331E-06"
        ixz="2.5169E-07"
        iyy="0.013891"
        iyz="-7.22E-06"
        izz="0.024399" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.89804 0.91765 0.92941 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="right_wheel">
    <inertial>
      <origin
        xyz="5.2042E-18 -0.0009488 -1.1102E-16"
        rpy="0 0 0" />
      <mass
        value="2.8826" />
      <inertia
        ixx="0.0029015"
        ixy="8.8533E-19"
        ixz="1.4034E-19"
        iyy="0.00525"
        iyz="8.1372E-18"
        izz="0.0029015" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/right_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79608 0.82353 0.93725 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/right_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="right_wheel_joint"
    type="continuous">
    <origin
      xyz="0 -0.098333 0.02605"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="right_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="1.7026E-13 0.0009488 5.8453E-14"
        rpy="0 0 0" />
      <mass
        value="2.8826" />
      <inertia
        ixx="0.0029015"
        ixy="-9.1714E-15"
        ixz="6.0506E-15"
        iyy="0.00525"
        iyz="-2.7079E-15"
        izz="0.0029015" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/left_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79608 0.82353 0.93725 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/left_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="left_wheel_joint"
    type="continuous">
    <origin
      xyz="0 0.098333 0.02605"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="left_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="plate1">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="0" />
      <inertia
        ixx="0"
        ixy="0"
        ixz="0"
        iyy="0"
        iyz="0"
        izz="0" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/plate1.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/plate1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="plate1_joint"
    type="fixed">
    <origin
      xyz="-0.0038733 0 0.13505"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="plate1" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="camera">
    <inertial>
      <origin
        xyz="-0.0130484998320407 -0.000246196588719889 6.05673649020089E-05"
        rpy="0 0 0" />
      <mass
        value="0.0447522011433413" />
      <inertia
        ixx="2.72775274941292E-05"
        ixy="-2.44341098404076E-07"
        ixz="1.17396546030412E-09"
        iyy="3.94471809619555E-06"
        iyz="-2.80139315621639E-09"
        izz="2.73620912571408E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/camera.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/camera.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="camera_joint"
    type="fixed">
    <origin
      xyz="0.1095 0.0055774 -0.0125"
      rpy="0 0 0" />
    <parent
      link="plate1" />
    <child
      link="camera" />
    <axis
      xyz="0 0 0" />
  </joint>
  <link
    name="lidar">
    <inertial>
      <origin
        xyz="-0.00745026268241725 -0.000710181573741281 0.0106681277328403"
        rpy="0 0 0" />
      <mass
        value="1.33076913637071" />
      <inertia
        ixx="0.000617412562574112"
        ixy="-2.9274715492163E-05"
        ixz="0.000157957059991761"
        iyy="0.000958202713497201"
        iyz="9.99903112864014E-06"
        izz="0.00109815200027136" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/lidar.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://rom2109_description/meshes/lidar.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lidar_joint"
    type="fixed">
    <origin
      xyz="0.0159981253913117 -0.00158018301594736 0.0325999999999998"
      rpy="0 0 0" />
    <parent
      link="plate1" />
    <child
      link="lidar" />
    <axis
      xyz="0 0 0" />
  </joint>
  <!--GAZEBO ADD BY ROM ROBOTICS-->
  
  <!-- here is the gazebo plug-in to simulate a lidar sensor -->
  <gazebo reference="lidar">
    <sensor type="ray" name="head_hokuyo_sensor">
    <!--sensor type="gpu_ray" name="sick_lidar_sensor"-->
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!--plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_gpu_laser.so"-->
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>  

<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_contol.so">
  </plugin>
</gazebo>

 <!-- Colour -->
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="plate1">
    <material>Gazebo/Yellow</material>
  </gazebo>

   <gazebo reference="plate2">
    <material>Gazebo/Yellow</material>
  </gazebo>

   <gazebo reference="plate3">
    <material>Gazebo/Yellow</material>
  </gazebo>

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <legacyMode>true</legacyMode>
      <updateRate>100</updateRate>
      <leftJoint>right_wheel_joint</leftJoint>
      <rightJoint>left_wheel_joint</rightJoint>
      <wheelSeparation>0.27</wheelSeparation>
      <wheelDiameter>0.07</wheelDiameter>
      <torque>200</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <!--don't publish wheel TF, so it does not conflict with robot_state_publisher -->
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
 </gazebo> 
</robot>